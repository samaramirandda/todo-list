// Carrega as tarefas salvas no localStorage do navegador, ou cria um array vazio se n√£o houver nenhuma
let tasks = JSON.parse(localStorage.getItem("tasks")) || [];

// Fun√ß√£o para salvar as tarefas no localStorage (mem√≥ria local do navegador)
function saveTasks() {
    // Converte o array de tarefas em texto JSON e salva no localStorage
    localStorage.setItem("tasks", JSON.stringify(tasks));
}

// Fun√ß√£o para exibir todas as tarefas na tela
function renderTasks() {
    // Pega o elemento HTML da lista onde as tarefas ser√£o exibidas
    const list = document.getElementById("lista-tarefas");
    // Limpa todo o conte√∫do da lista antes de recriar
    list.innerHTML = "";

    // Para cada tarefa no array, cria um item da lista
    tasks.forEach((task, index) => {
        // Cria um novo elemento <li> (item da lista)
        const li = document.createElement("li");
        // Define o conte√∫do HTML do item da lista
        li.innerHTML = `
        ${task}
        <div class="actions">
            <button onclick="editTask(${index})">‚úèÔ∏è</button>
            <button onclick="removeTask(${index})">üóëÔ∏è</button>
        </div>
        `;
        // Adiciona o item criado √† lista na tela
        list.appendChild(li);
    });
}

// Fun√ß√£o para adicionar uma nova tarefa
function addTask() {
    // Pega o elemento do campo de input onde o usu√°rio digita a tarefa
    const input = document.getElementById("tarefa");
    // Pega o valor digitado e remove espa√ßos em branco no in√≠cio/fim
    const task = input.value.trim();

    // Verifica se o usu√°rio digitou alguma coisa
    if (task) {
        // Adiciona a nova tarefa ao final do array
        tasks.push(task);
        // Limpa o campo de input
        input.value = "";
        // Salva as tarefas atualizadas no localStorage
        saveTasks();
        // Atualiza a exibi√ß√£o das tarefas na tela
        renderTasks();
    }
}

// Fun√ß√£o para remover uma tarefa espec√≠fica
function removeTask(index) {
    // Remove 1 elemento do array na posi√ß√£o especificada pelo index
    tasks.splice(index, 1);
    // Salva as tarefas atualizadas no localStorage
    saveTasks();
    // Atualiza a exibi√ß√£o das tarefas na tela
    renderTasks();
}

// Fun√ß√£o para editar uma tarefa existente
function editTask(index) {
    // Mostra uma caixa de di√°logo para o usu√°rio editar a tarefa
    const newTask = prompt("Editar tarefa:", tasks[index]);

    // Verifica se o usu√°rio n√£o cancelou e digitou algo v√°lido
    if (newTask !== null && newTask.trim() !== "") {
        // Substitui a tarefa antiga pela nova no array
        tasks[index] = newTask.trim();
        // Salva as tarefas atualizadas no localStorage
        saveTasks();
        // Atualiza a exibi√ß√£o das tarefas na tela
        renderTasks();
    }
}

// Adiciona um ouvinte de eventos para permitir adicionar tarefa pressionando Enter
document.getElementById("tarefa").addEventListener("keypress", function(event) {
    // Verifica se a tecla pressionada foi Enter
    if (event.key === "Enter") {
        // Chama a fun√ß√£o para adicionar tarefa
        addTask();
    }
});

// Executa a fun√ß√£o para exibir as tarefas assim que a p√°gina carrega
renderTasks();